age_colors
legend("bottomright", fill = palette1, legend = levels(age2), title = "Age Groups", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
boxplot(nba$salary2 ~ nba$position)
boxplot(nba$points ~ nba$poisition)
boxplot(nba$points ~ nba$position)
boxplot(nba$salary2 ~ nba$age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
View(age2)
knitr::opts_chunk$set(echo = TRUE)
github <- 'http://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
data_types <- c('character','factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'double', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
datafile
nba <- read.csv(datafile, colClasses = data_types)
str(nba, vec.len = 1)
nba2 <- read.table(datafile, sep = ",", header = T, colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
summary(nba$salary)
hist(nba$salary, breaks = 100)
nba$salary2 <- nba$salary/10^6
hist(nba$salary2, breaks = 100)
hist(log(nba$salary2), breaks = 100)
#The majority of the distribution is now concentrated around the right side of the histogram; the historgram now appears to have a left skew, because the log of very small values produced a much larger negative number in absolute terms than does the log of a very high number, due to the exponentiality of the log function.
low <- log(nba$salary2) < -3
low
sum(low)
nba[low, c('player', 'weight', 'height', 'team', 'position')]
nba <- nba[!low,]
dim(nba)
summary(nba$points)
hist(nba$points)
nba[nba$points == 0, ]
nba[nba$points == 0, "points"] <- 0.1
hist(log(nba$points))
#Distribution is negatively skewed now.
boxplot(nba$salary2 ~ nba$age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
#There doesn't seem to be a large difference in players salaries compared to their age. Generally, the youngest and oldest players will have the lowest salaries.
boxplot(nba$points ~ nba$age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
#It appears that the younger players will score more points than older players overall.
nba$age2 <- nba$age
nba[nba$age2 <= 19, "age2"] <- 20
View(age2)
nba$age2 <- cut(nba$age2, breaks = c(20,25,30,40), labels = c("20-24", "25-29", "30+"))
summary(age2)
boxplot(nba$salary2 ~ nba$age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
#There doesn't seem to be a large difference in players salaries compared to their age. Generally, the youngest and oldest players will have the lowest salaries.
boxplot(nba$points ~ nba$age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
#It appears that the younger players will score more points than older players overall.
nba$age2 <- nba$age
nba[nba$age2 <= 19, "age2"] <- 20
age2 <- cut(nba$age2, breaks = c(20,25,30,40), labels = c("20-24", "25-29", "30+"))
summary(age2)
age2
palette1 <- c("#D4D62A","#4F9D62A","#9575AB")
length(age2)
age_colors <- palette1[age2]
age_colors
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
palette1 <- c("#D4D62A","#4F9D62A","#9575AB")
length(age2)
age_colors <- palette1[age2]
age_colors
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = palette1, pch = 19, cex = 0.6)
palette1 <- c("#D4D62A","#4F9D62A","#9575AB")
length(age2)
age_colors <- palette1[age2]
age_colors
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2), title = "Age Groups", cex = 0.8)
palette1 <- c("#D4D62A","#4F9D62A","#9575AB")
length(age2)
age_colors <- palette1[age2]
age_colors
clear all
rm(ls())
install.packages("dplyr")
readr
knitr::opts_chunk$set(echo = TRUE)
library("readr")
github <- 'http://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
dat_type <- c('character','factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'double', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
dat <- read_csv(datafile, col_names = T, col_types = cols(player = col_character(), team = col_character(), position = col_factor(levels = c('PF', 'PG', 'C', 'SG', 'SF')), height = col_integer(), weight = col_integer(), age = col_integer(), experience = col_integer(), college = col_character(), salary = col_double(), games = col_integer(), minutes = col_integer(), points = col_integer(), points3 = col_integer(), points2 = col_integer(), points1 = col_integer()))
library("readr")
github <- 'http://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
dat_type <- c('character','factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'double', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
dat <- read_csv(datafile, col_names = T, col_types = cols(player = col_character(), team = col_character(), position = col_factor(levels = c('PF', 'PG', 'C', 'SG', 'SF')), height = col_integer(), weight = col_integer(), age = col_integer(), experience = col_integer(), college = col_character(), salary = col_double(), games = col_integer(), minutes = col_integer(), points = col_integer(), points3 = col_integer(), points2 = col_integer(), points1 = col_integer()))
library("readr")
github <- 'http://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
dat_type <- c('character','factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'double', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
dat <- read_csv(datafile, col_names = T, col_types = cols(player = col_character(), team = col_character(), position = col_factor(levels = c('PF', 'PG', 'C', 'SG', 'SF')), height = col_integer(), weight = col_integer(), age = col_integer(), experience = col_integer(), college = col_character(), salary = col_double(), games = col_integer(), minutes = col_integer(), points = col_integer(), points3 = col_integer(), points2 = col_integer(), points1 = col_integer()))
summary(dat)
str(dat)
class(dat)
library("ggplot2")
library("dplyr")
team_salaries <- read_csv(datafile, col_names = T)
tt <- summarise(
group_by(dat, team),
avg_salary = mean(salary)
)
#do I use this? how do I total salary and mean salary by team?
summarise(
group_by(dat, team),
total_salary = salary/1000000,
mean_salary = mean(salary)/1000000
)
summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000
)
#do I use this? how do I total salary and mean salary by team?
team_salaries <- arrange(summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000,
desc(total_salary)))
View(team_salaries)
library("ggplot2")
library("dplyr")
team_salaries <- read_csv(datafile, col_names = T)
library("readr")
github <- 'http://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
dat_type <- c('character','factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'double', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
dat <- read_csv(datafile, col_names = T, col_types = cols(player = col_character(), team = col_character(), position = col_factor(levels = c('PF', 'PG', 'C', 'SG', 'SF')), height = col_integer(), weight = col_integer(), age = col_integer(), experience = col_integer(), college = col_character(), salary = col_double(), games = col_integer(), minutes = col_integer(), points = col_integer(), points3 = col_integer(), points2 = col_integer(), points1 = col_integer()))
summary(dat)
str(dat)
class(dat)
library("ggplot2")
library("dplyr")
team_salaries <- read_csv(datafile, col_names = T)
#do I use this? how do I total salary and mean salary by team?
team_salaries <- arrange(summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000,
desc(total_salary)))
team_salaries
class(team_salaries)
as.data.frame(team_salaries)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Salary") + xlab("Team") + ylab("Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary))
#Help with ordering and line
ggplot(team_salaries, aes(x = reorder(team, -total_salary), y = total_salary)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Salary") + xlab("Team") + ylab("Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary))
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Salary") + xlab("Team") + ylab("Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary))
points <- arrange(summarise(
group_by(dat, team),
total_points = sum(points)/1000000,
mean_points = mean(points)/1000000,
median_points = median(points)/1000000,
desc(total_points)))
team_points <- read_csv(datafile, col_names = T)
team_points <- arrange(summarise(
group_by(dat, team),
total_points = sum(points)/1000000,
mean_points = mean(points)/1000000,
median_points = median(points)/1000000,
desc(total_points)))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, -total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
#Same thing, help with line and decreasing attribute
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
View(team_points)
View(team_salaries)
#do I use this? how do I total salary and mean salary by team?
team_salaries <- summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Salary") + xlab("Team") + ylab("Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary))
View(team_salaries)
group_by(dat, team),
group_by(dat, team),
#do I use this? how do I total salary and mean salary by team?
team_salaries <- summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000)
#do I use this? how do I total salary and mean salary by team?
team_salaries <- arrange(summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000),
desc(total_salary))
View(team_salaries)
library("ggplot2")
library("dplyr")
team_salaries <- read_csv(datafile, col_names = T)
#do I use this? how do I total salary and mean salary by team?
team_salaries <- arrange(summarise(
group_by(dat, team),
total_salary = sum(salary)/1000000,
mean_salary = mean(salary)/1000000,
median_salary = median(salary)/1000000),
desc(total_salary))
team_salaries
class(team_salaries)
as.data.frame(team_salaries)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Salary") + xlab("Team") + ylab("Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary))
team_points <- arrange(summarise(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points),
desc(total_points)))
team_points <- summarise(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points))
View(points)
drop(points)
remove(points)
View(team_points)
team_points <- arrange(summarise(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)),
desc(total_points))
View(team_points)
team_points <- read_csv(datafile, col_names = T)
team_points <- arrange(summarise(
group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)),
desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points), aes(col('Blue')))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points), aes(col('Red')))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", col = 'blue') + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", col = 'red') + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", col = 'green') + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", rgb = '12,15,233') + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", rgb = (12,23,22)) + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", rgb(23,22,233)) + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity", rgb(23,22,1)) + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("NBA Teams Ranked by Total Points") + xlab("Team") + ylab("Total Points") + geom_hline(yintercept = mean(team_points$total_points))
points_salary <- inner_join(team_salaries, team_points)
View(points_salary)
summary(points_salary)
points_salary <- mutate(points_salary,
cost_point = totaL_salary/total_points)
points_salary <- mutate(points_salary,
cost_point = team_salary$totaL_salary/team_points$total_points)
points_salary <- mutate(points_salary,
cost_point = team_salaries$totaL_salary/team_points$total_points)
View(team_points)
View(team_points)
mutate(points_salary, team_points$total_points/team_salaries$total_salary)
mutate(points_salary, cost_point = team_points$total_points/team_salaries$total_salary)
points_salary <- mutate(points_salary, cost_point = team_points$total_points/team_salaries$total_salary)
View(points_salary)
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity')
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity') + coord_flip()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(yintercept = mean(points_salary$cost_point))
?geom_hline
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), colour = 'blue'))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), colour(blue)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), colour = blue))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point), color = 'green') + geom_point(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue') + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = team) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = points_salary$team) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', shape = 2) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', shape = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 2) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'green'))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), Legend = 'green'))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point)))
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) +  theme(legend.position = "bottom")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) +  theme()
()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', color = 'blue', size = 1.3) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) + theme()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 0.5) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) + theme()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) + theme()
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point))) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'green')) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'red')) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'brown')) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'brown')) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point")
gplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") + geom_line(method = loess)
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") + geom_line()
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.5) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = -cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") + geom_smooth(method = loess)
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") + geom_smooth()
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") + geom_smooth(method = lm)
ggplot(points_salary, aes(x = reorder(team, cost_point), y = cost_point)) + geom_point(stat = 'identity', aes(color = team), alpha = 1) + coord_flip() + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Team") + ylab("Cost per Point") + geom_hline(aes(yintercept = mean(points_salary$cost_point), color = 'brown')) + theme(legend.position = "bottom")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, shape = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") +
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, shape = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points") +
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, shape = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2, shape = 2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2, shape = team) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), alpha = 1, size = 1.2, shape = points_salary$team) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, shape = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, size = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
?geom_point
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, fill = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, stroke = team), alpha = 1, size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, alpha = team), size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, size = team), size = 1.2) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point, size = team)) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), size = 1.2, alpha = 0.8) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
ggplot(points_salary, aes(x = mean_salary, y = mean_points)) + geom_point(aes(color = cost_point), size = 1.2, alpha = 0.8) + ggtitle("NBA Teams Ranked by Cost per Point") + xlab("Mean Salary (in Millions)") + ylab("Mean Points")
getwd()
cd stat133-lab05
write.csv()
knitr::opts_chunk$set(echo = TRUE)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports/csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
mtcars
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
head(mtcars)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
getwd
getwd()
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports/mtcars.csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports/mtcars.csv'
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports/mtcars.csv'
)
write.csv(
x = mtcars,
file = '../Desktop/stat133-lab05/exports.csv'
)
write.csv(
x = mtcars,
file = '../Desktop/stat133-lab05/exports.csv'
)
summary(mtcars[ ,c('mpg', 'dos[')])
summary(mtcars[ ,c('mpg','disp[')])
summary(mtcars[ ,c('mpg','disp)])
summary(mtcars[ ,c('mpg','disp)])
summary(mtcars[ ,c('mpg','disp)])
summary(mtcars[ ,c('mpg','disp')])
sink(file = 'stat133-lab05/summary-mpg-disp.txt)
summary(mtcars[ ,c('mpg','disp)])
sink()
summary(mtcars[ ,c('mpg','disp')])
sink(file = 'stat133-lab05/summary-mpg-disp.txt)
summary(mtcars[ ,c('mpg','disp)])
summary(mtcars[ ,c('mpg','disp')])
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg','disp)])
sink()
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg','disp)])
sink()
sink
?sink
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg','disp')])
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
mtcars[ , c('mpg', 'disp', 'hp')]
sink(file = 'stat133-lab05/dataset.csv')
mtcars[ , c('mpg', 'disp', 'hp')]
sink()
sink(file = 'stat133-lab05/exports/dataset.csv')
mtcars[ , c('mpg', 'disp', 'hp')]
sink()
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
?pdf()
?plot()
mpg
view(mpg)
View(mpg)
plot(x = mpg, y = wt)
png(filename = 'stat133-lab05/exports/scatterplot-mpg-wt.png')
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
?png()
png(filename = 'stat133-lab05/exports/scatterplot-mpg-wt.png', quality = 100%)
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
png(filename = 'stat133-lab05/exports/scatterplot-hp-wt.png', quality = 100%)
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
png(filename = 'stat133-lab05/exports/scatterplot-hp-wt.png', res = 300)
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
png(filename = 'stat133-lab05/exports/scatterplot-hp-wt.png', res = 150)
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
png(filename = 'stat133-lab05/exports/scatterplot-hp-wt.png', res = 200)
plot(x = mtcars$mpg, y = mtcars$wt)
dev.off()
jpeg(filename = 'stat133-lab05/exports/histogram-mpg.jpeg', width = 600, height = 400, units = "px")
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5, units = "in")
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5, units = in)
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5, units = 'in')
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5, units = "in")
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5)
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5, units = "in")
hist(mtcars$mpg)
dev.off()
pdf(filename = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5)
hist(mtcars$mpg)
dev.off()
library("ggplot2")
gg_mpg_disp <- ggplot(mtcars, aes(mpg, disp)) + geom_point()
gg_mpg_disp
ggsave(filename = 'stat133-lab05/exports/scatterplot-mpg-disp.pdf', plot = gg_mpg_disp, width = 5, height = 5, units = "in")
?ggsave
ggsave('scatterplot-mpg-disp.pdf', plot = gg_mpg_disp, width = 5, height = 5, units = "in")
ggsave('scatterplot-mpg-disp.pdf', path = 'stat133-lab05/exports/scatterplot-mpg-disp.pdf', plot = gg_mpg_disp, width = 5, height = 5, units = "in")
ggsave('scatterplot-mpg-disp.pdf', path = 'Desktop/stat133-lab05/exports/scatterplot-mpg-disp.pdf', plot = gg_mpg_disp, width = 5, height = 5, units = "in")
ggsave('scatterplot-mpg-disp.pdf', plot = gg_mpg_disp, width = 5, height = 5, units = "in")
pwd
getwd
getwd()
setwd("C:/Users/achin/OneDrive/Documents/Cal/Spring 2019/STAT 133/Workouts/workout1")
read.csv(file = "kevin-durant.csv")
setwd("C:/Users/achin/OneDrive/Documents/Cal/Spring 2019/STAT 133/Workouts/workout1/data")
read.csv(file = "kevin-durant.csv")
setwd("C:/Users/achin/OneDrive/Documents/Cal/Spring 2019/STAT 133/Workouts/workout1")
setwd("C:/Users/achin/OneDrive/Documents/Cal/Spring 2019/STAT 133/Workouts/workout1/data")
